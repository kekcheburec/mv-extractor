name: Build

on: [workflow_dispatch]

jobs:
  build_docker:
    name: Build Docker image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push x86_64
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: kekcheburec2/mv-extractor:dev-amd64
          cache-from: type=registry,ref=kekcheburec2/mv-extractor:buildcache-amd64
          cache-to: type=registry,ref=kekcheburec2/mv-extractor:buildcache-amd64,mode=max

      - name: Build and push ARM
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          platforms: linux/arm64
          tags: kekcheburec2/mv-extractor:dev-aarch64
          cache-from: type=registry,ref=kekcheburec2/mv-extractor:buildcache-aarch64
          cache-to: type=registry,ref=kekcheburec2/mv-extractor:buildcache-aarch64,mode=max

  build_wheels:
    name: Build wheels for cp${{ matrix.python }}-${{ matrix.platform_id }}
    runs-on: ${{ matrix.os }}
    needs: build_docker
    strategy:
      # Ensure that a wheel builder finishes even if another fails
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-latest
          python: 310
          bitness: 64
          platform_id: manylinux
          manylinux_x86_64_image: kekcheburec2/mv-extractor:dev-amd64
          manylinux_aarch64_image: kekcheburec2/mv-extractor:dev-aarch64

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.8.1
        env:
          CIBW_PLATFORM: linux
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}_*
          # Disable building PyPy wheels on all platforms
          CIBW_SKIP: pp*
          CIBW_ARCHS: x86_64,aarch64
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux_x86_64_image }}
          CIBW_MANYLINUX_AARCH64_IMAGE: ${{ matrix.manylinux_aarch64_image }}
          CIBW_BUILD_FRONTEND: build
          # CIBW_TEST_COMMAND: VIDEO_URL={project}/vid_h265.mp4 python3 {project}/tests/tests.py
          CIBW_BUILD_VERBOSITY: 1

      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
